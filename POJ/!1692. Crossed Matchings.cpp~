#include <iostream>
#include <cstring>
using namespace std;

int main()
{
	int ncase;
	cin >> ncase;

	int arr1[105], arr2[105];
	int dp[105][105];
	while(ncase--)
	{
		int n1, n2;
		cin >> n1 >> n2;

		for(int i = 0;i < n1;i++)
			cin >> arr1[i];
		for(int i = 0;i < n2;i++)
			cin >> arr2[i];

		memset(dp, 0, sizeof(dp));
		for(int i = 1;i < n1;i++)
			for(int j = 1;j < n2;j++)
			{
				dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]);
				if (arr1[i] != arr2[j])
				{
					int index1 = -1, index2 = -1;
					for(int k = i - 1;k >= 0;k--)
						if (arr1[k] == arr2[j])
						{
							index1 = k;
							break;
						}
						
					for(int l = j - 1;l >= 0;l--)
						if (arr2[l] == arr1[i])
						{
							index2 = l;
							break;
						}
					if (index1 != -1 && index2 != -1)
					{
						if (index1 > 0) 
							dp[i][j] = max(dp[index1 - 1][j - 1] + 1, dp[i][j]);
						if (index2 > 0)
							dp[i][j] = max(dp[i - 1][index2 - 1] + 1, dp[i][j]);
						if (index1 == 0 && index2 == 0)
							dp[i][j] = 1;
					}
				}
			}

		int res = 0;
		for(int i = 0;i < n1;i++)
		{
			for(int j = 0;j < n2;j++)
			{
				res = max(res, dp[i][j]);
				cout << dp[i][j] << " ";
			}
			cout << endl;
		}
		cout << res << endl;
	}
	return 0;
}
