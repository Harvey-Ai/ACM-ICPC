#include <stdio.h>
#include <string.h>
#define MAXN 60005
int values[MAXN];
int flags[MAXN];

int main()
{
	int a[5];
	int ncase = 1;
	int i, j, k, temp, cnt, sum;

	while(scanf("%d %d %d %d %d %d", &a[0], &a[1], &a[2], &a[3], &a[4], &a[5]), a[0] || a[1] || a[2] || a[3] || a[4] || a[5])
	{
		for (i = 0;i < 6;i++)
		{
			if (a[i] > 12)
			{
				if (a[i] % 2)
					a[i] = 11;
				else
					a[i] = 12;
			}
		}

		memset(flags, 0, sizeof(flags));

		flags[0] = 1;
		values[0] = 0;
		cnt = 1;

		sum = 0;
		for(i = 0;i < 6;i++)
			sum += (i + 1)*a[i];

		if (sum % 2)
		{
			printf("Collection #%d:\nCan't be divided.\n\n", ncase++);
			continue;
		}

		for(i = 0;i < 6;i++)
		{
			for(j = 0;j < a[i];j++)
			{
				temp = cnt;
				for (k = 0;k < cnt;k++)
				{
					if (values[k] + i + 1 <= sum / 2 && flags[values[k] + i + 1] == 0)
					{
						values[temp++] = values[k] + i + 1;
						flags[values[k] + i + 1] = 1;
					}
				}
				cnt = temp;
				if (flags[sum / 2])
					break;
			}
			if (flags[sum / 2])
					break;
		}

		if (flags[sum / 2])
			printf("Collection #%d:\nCan be divided.\n\n", ncase++);
		else
			printf("Collection #%d:\nCan't be divided.\n\n", ncase++);
	}
	return 0;
}
