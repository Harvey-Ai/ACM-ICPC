#include <iostream>
#include <cstring>
using namespace std;

int charIndex[256];
int matchTable[5][5] = { {5, -1, -2, -1, -3}, {-1, 5, -3, -2, -4}, {-2, -3, 5, -2, -2}, {-1, -2, -2, 5, -1}, {-3, -4, -2, -1, -100000000} };

int dp[105][105];
int main()
{
	int ncase;
	cin >> ncase;

	memset(charIndex, 0, sizeof(charIndex));
	charIndex['A'] = 0;
	charIndex['C'] = 1;
	charIndex['G'] = 2;
	charIndex['T'] = 3;
	charIndex['-'] = 4;
	while(ncase--)
	{
		int len1, len2;
		string str1, str2;

		cin >> len1;
		cin >> str1;
		cin >> len2;
		cin >> str2;

		for(int i = 0;i <= len1;i++)
			for(int j = 0;j <= len2;j++)
				dp[i][j] = -1;
		dp[0][0] = 0;

		for(int i = 0;i < len1;i++)
			dp[i + 1][0] = dp[i][0] + matchTable[charIndex[str1[i]]][charIndex['-']];
		for(int j = 0;j < len2;j++)
			dp[0][j + 1] = dp[0][j] + matchTable[charIndex['-']][charIndex[str2[j]]];

		for(int i = 0;i < len1;i++)
			for(int j = 0;j < len2;j++)
			{
				dp[i + 1][j + 1] = dp[i][j] + matchTable[charIndex[str1[i]]][charIndex[str2[j]]];
				if (dp[i][j + 1] + matchTable[charIndex[str1[i]]][charIndex['-']] > dp[i + 1][j + 1])
					dp[i + 1][j + 1] = dp[i][j + 1] + matchTable[charIndex[str1[i]]][charIndex['-']];
				if (dp[i + 1][j] + matchTable[charIndex['-']][charIndex[str2[j]]] > dp[i + 1][j + 1])
					dp[i + 1][j + 1] = dp[i + 1][j] + matchTable[charIndex['-']][charIndex[str2[j]]];
			}
		cout << dp[len1][len2] << endl;
	}

	return 0;
}
