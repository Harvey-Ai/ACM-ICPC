#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

int boxes[505][1005];
int graph[505][505];
int n;
int dp[505];

int dfs(int p)
{
    if (dp[p] != -1)
        return dp[p];
    
    int maxDp = 0;
	for(int i = 0;i < n;i++)
		if (graph[p][i])
            maxDp = max(maxDp,  dfs(i));
    
    dp[p] = maxDp + 1;
    return dp[p];
}

int main()
{
	int d;
	while(scanf("%d %d", &n, &d) != EOF)
    {
        n++;
        for(int i = 0;i < n;i++)
        {
            for(int j = 0;j < d;j++)
                scanf("%d", &boxes[i][j]);
            sort(boxes[i], boxes[i] + d);
        }

        memset(graph, 0, sizeof(graph));
        for(int i = 0;i < n;i++)
            for(int j = 0;j < n;j++)
            {
                int contain = 1;
                for(int k = 0;k < d;k++)
                    if (boxes[i][k] >= boxes[j][k])
                    {
                        contain = 0;
                        break;
                    }
                if (contain)
                    graph[i][j] = 1;
            }

        memset(dp, -1, sizeof(dp));
        dfs(0);
        if (dp[0] == 1)
            printf("Please look for another gift shop!\n");
        else
            printf("%d\n", dp[0] - 1);
    }
	return 0;
}