/*
题目描述：
    Grading hundreds of thousands of Graduate Entrance Exams is a hard work. It is even harder to design a process to make the results as fair as possible. One way is to assign each exam problem to 3 independent experts. If they do not agree to each other, a judge is invited to make the final decision. Now you are asked to write a program to help this process.
    For each problem, there is a full-mark P and a tolerance T(<P) given. The grading rules are:
    • A problem will first be assigned to 2 experts, to obtain G1 and G2. If the difference is within the tolerance, that is, if |G1 - G2| ≤ T, this problem's grade will be the average of G1 and G2.
    • If the difference exceeds T, the 3rd expert will give G3.
    • If G3 is within the tolerance with either G1 or G2, but NOT both, then this problem's grade will be the average of G3 and the closest grade.
    • If G3 is within the tolerance with both G1 and G2, then this problem's grade will be the maximum of the three grades.
    • If G3 is within the tolerance with neither G1 nor G2, a judge will give the final grade GJ.
输入：
    Each input file may contain more than one test case.
    Each case occupies a line containing six positive integers: P, T, G1, G2, G3, and GJ, as described in the problem. It is guaranteed that all the grades are valid, that is, in the interval [0, P].
输出：
    For each test case you should output the final grade of the problem in a line. The answer must be accurate to 1 decimal place.
样例输入：
20 2 15 13 10 18
样例输出：
14.0

*/

#include <iostream>
#include <cstdio>
#include <cmath>
using namespace std;

int main()
{
	double p, t, g1, g2, g3, gj;
	while(cin >> p >> t >> g1 >> g2 >> g3 >> gj)
	{
		if (abs(g1 - g2) <= t)
			printf("%0.1lf\n", (g1 + g2) / 2);
		else if (abs(g1 - g3) <= t && abs(g2 - g3) <= t)
		{
			double temp;
			if (g1 > g2)
				temp = g1;
			if (g3 > temp)
				temp = g3;
				printf("%0.1lf\n", temp);
		}
		else if (abs(g1 - g3) <= t || abs(g2 - g3) <= t)
		{
			if (abs(g1 - g3) <= t)
				printf("%0.1lf\n", (g1 + g3) / 2);
			else
				printf("%0.1lf\n", (g2 + g3) / 2);
		}
		else
			printf("%0.1lf\n", (gj));
	}
	return 0;
}
