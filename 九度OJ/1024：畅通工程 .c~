#include <iostream>
#include <cstring>
using namespace std;

int res;
int n;
int g[105][105];

int prime(int node)
{
	int set[105], dist[105];
	int i, j;
	int min, index;
	memset(set, 0, sizeof(set));
	set[node] = 1;
	
	for(i = 1;i <= n;i++)
		dist[i] = g[i][node];

	for(i = 1;i < n;i++)
	{
		min = -1;
		for(j = 1;j <= n;j++)
			if (!set[j] && (min == -1 || min > dist[j]))
			{
				min = dist[j];
				index = j;
			}

		//cout << min << endl;
		if (min == -1)
			return -1;
		set[index] = 1;
		res += min;

		for(j = 1;j <= n;j++)
			if (!set[j] && g[index][j] != -1 && (dist[j] == -1 || g[index][j] < dist[j]))
				dist[j] = g[index][j];
	}
}

int main()
{
	int a, b, c;
	int i;
	int m;

	while(cin >> m >> n, m)
	{
		memset(g, -1, sizeof(g));
		for(i = 0;i < m;i++)
		{
			cin >> a >> b >> c;
			g[a][b] = g[b][a] = c;
		}
		res = 0;
		if (prime(1) == -1)
			cout << "?" << endl;
		else
			cout << res << endl;
	}
	return 0;
}

